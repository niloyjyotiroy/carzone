%Problem 6: Write a MATLAB program for (i) arithmetic and geometric (ii) harmonic and contraharmonic (iii) midpoint and alpha-trimmed mean filter of a gray level image.
%Arithmetic mean filter and Geometric Mean filter 
%Source Code:
clc;clear all;close all;
% Arithmetic Mean Filter and Geometric Mean Filter
img=imread('cameraman.tif');
[r,c]=size(img);
img=im2double(img);
subplot(221);imshow(img);title('Source image');
%%%Adding Gaussian Noise
noisy_img=imnoise(img,'gaussian');
subplot(222);imshow(noisy_img);title('Gaussian noisy image');
%%% 'valid' convolution(3*3) , so image dimension will be reduced
for i=1:r-2
    for j=1:c-2
        window = noisy_img(i:i+2,j:j+2);
        amf_img(i,j)= mean( window(:) );
        gmf_img(i,j)= geomean( window(:) );    
    end
end
subplot(223);imshow(amf_img);title('AMF filtered image');
subplot(224);imshow(gmf_img);title('GMF filtered image');

%Contraharmonic Filter and Harmonic Filter: 
%Source Code:
clc;clear all;close all;
% Harmonic Mean Filter and Conrtaharmonic Mean Filter
img=imread('cameraman.tif');
[r,c]=size(img);
img=im2double(img);
subplot(221);imshow(img);title('Source image');
%%%Adding Gaussian Noise
noisy_img=imnoise(img,'gaussian');
subplot(222);imshow(noisy_img);title('Gaussian noisy image');
%%% 'valid' convolution(3*3) , so image dimension will be reduced
Q=1.5;
for i=1:r-2
    for j=1:c-2
        window = noisy_img(i:i+2,j:j+2);
        hmf_img(i,j)= harmmean( window(:) ); 
        chmf_img(i,j)= sum( window(:).^(Q+1) ) ./ sum( window(:).^Q );
    end
end
subplot(223);imshow(hmf_img);title('HMF filtered image');
subplot(224);imshow(chmf_img);title('CHMF filtered image');

%Midpoint filter and Alpha-trimmed filter: 
%Source Code:
clc;clear all;close all;
%  Midpoint Filter ( MF )
img=imread('cameraman.tif');
[r,c]=size(img);
img=im2double(img);
subplot(221);imshow(img);title('Source image');
%%% Adding Gaussian Noise
noisy_img=imnoise(img,'Gaussian');
subplot(222);imshow(noisy_img);title('Gaussian noisy image');
%%% Filtering , window 3*3
midf_img= ( ordfilt2(noisy_img,9,ones(3,3)) + ordfilt2(noisy_img,1,ones(3,3)) )./2 ;
subplot(223);imshow(midf_img);title('Midpoint filtered image');
% Alpha-trimmed Mean Filter ( ATMF )
%%% 'valid' convolution(3*3) , so image dimension will be reduced
d=25; %percent
for i=1:r-2
    for j=1:c-2
        window = noisy_img(i:i+2,j:j+2);
        atmf_img(i,j)= trimmean( window(:),d );    
    end
end
subplot(224);imshow(atmf_img);title('ATMF filtered image');
